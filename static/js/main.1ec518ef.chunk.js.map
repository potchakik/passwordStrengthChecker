{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","require","App","useState","type","setType","score","setScore","guesTimeString","setGuessTimeString","warning","setWarning","suggestions","setSuggestions","isToggled","setIsToggled","passwordStrength","e","a","preventDefault","method","url","data","password","target","value","res","guessTimeString","className","onChange","placeholder","maxLength","onClick","stopPropagation","currType","console","log","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAEMA,EAAQC,EAAQ,IAgFPC,MA9Ef,WACE,MAAwBC,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA6CJ,mBAAS,IAAtD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAsCR,mBAAS,IAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KAUMC,EAAgB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACvBD,EAAEE,iBADqB,SAELnB,EAAM,CACtBoB,OAAQ,OACRC,IAAK,mFACLC,KAAM,CACJC,SAAS,GAAD,OAAKN,EAAEO,OAAOC,UANH,OASA,KAPjBC,EAFiB,QASfJ,KAAKhB,MACXC,EAAS,iCACmB,IAAnBmB,EAAIJ,KAAKhB,MAClBC,EAAS,4BACmB,IAAnBmB,EAAIJ,KAAKhB,MAClBC,EAAS,4BACmB,IAAnBmB,EAAIJ,KAAKhB,MAClBC,EAAS,8BAETA,EAAS,+BAGXQ,GAAa,GACbN,EAAmBiB,EAAIJ,KAAKK,iBAC5BhB,EAAWe,EAAIJ,KAAKZ,SACpBG,EAAea,EAAIJ,KAAKV,aAxBD,2CAAH,sDA2BtB,OACE,gCACE,wBAAOgB,UAAU,iBAAjB,4CAEE,uBACExB,KAAMA,EACNwB,UAAU,iBACVC,SAAUb,EACVc,YAAY,WACZC,UAAU,OAEZ,sBAAMH,UAAU,gBAAgBI,QA9CrB,SAACf,GAChBA,EAAEE,iBACFF,EAAEgB,kBACF,IAAIC,EAAoB,UAAT9B,EAAmB,WAAa,QAC/C+B,QAAQC,IAAIF,GACZ7B,EAAQ6B,IAyCJ,SACY,UAAT9B,EAAmB,OAAS,SAE/B,sBAAMwB,UAAU,oBAAoB,aAAYtB,OAEjDQ,GACC,sBAAKc,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAYS,GAAG,oBAA7B,SACG/B,IAGH,qBAAIsB,UAAU,YAAd,0BACgBpB,EADhB,4BACyDE,KAGzD,oBAAIkB,UAAU,YAAYS,GAAG,cAA7B,SACGzB,WC9DE0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1ec518ef.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nconst axios = require(\"axios\");\n\nfunction App() {\n  const [type, setType] = useState(\"input\");\n  const [score, setScore] = useState(\"\");\n  const [guesTimeString, setGuessTimeString] = useState(\"\");\n  const [warning, setWarning] = useState(\"\");\n  const [suggestions, setSuggestions] = useState(\"\");\n  const [isToggled, setIsToggled] = useState(false);\n\n  const showHide = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let currType = type === \"input\" ? \"password\" : \"input\";\n    console.log(currType);\n    setType(currType);\n  };\n\n  const passwordStrength = async (e) => {\n    e.preventDefault();\n    const res = await axios({\n      method: \"post\",\n      url: \"https://o9etf82346.execute-api.us-east-1.amazonaws.com/staging/password/strength\",\n      data: {\n        password: `${e.target.value}`,\n      },\n    });\n    if (res.data.score === 4) {\n      setScore(\"Your password is very strong!\");\n    } else if (res.data.score === 3) {\n      setScore(\"Your password is strong!\");\n    } else if (res.data.score === 2) {\n      setScore(\"Your password is medium!\");\n    } else if (res.data.score === 1) {\n      setScore(\"Your password is too weak!\");\n    } else {\n      setScore(\"Your password is very weak!\");\n    }\n\n    setIsToggled(true);\n    setGuessTimeString(res.data.guessTimeString);\n    setWarning(res.data.warning);\n    setSuggestions(res.data.suggestions);\n  };\n\n  return (\n    <div>\n      <label className=\"label-password\">\n        Is your password strong enough?\n        <input\n          type={type}\n          className=\"input-password\"\n          onChange={passwordStrength}\n          placeholder=\"password\"\n          maxLength=\"12\"\n        />\n        <span className=\"show-password\" onClick={showHide}>\n          {type === \"input\" ? \"Hide\" : \"Show\"}\n        </span>\n        <span className=\"strength-password\" data-score={score}></span>\n      </label>\n      {isToggled && (\n        <div className=\"grid-messages\">\n          <h3 className=\"grid-item\" id=\"password-strength\">\n            {score}\n          </h3>\n\n          <h5 className=\"grid-item\">\n            It will take {guesTimeString} to guess your password. {warning}\n          </h5>\n\n          <h3 className=\"grid-item\" id=\"Suggestions\">\n            {suggestions}\n          </h3>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}